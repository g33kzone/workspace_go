{
    "swagger": "2.0",
    "info": {
        "description": "This API is used to Create Trigger and store Build Details",
        "title": "One developer journey template",
        "contact": {
            "name": "Babita Gurjar",
            "url": "https://infosys.com",
            "email": "babita.gurjar@infosys.com"
        },
        "license": {},
        "version": "0.1"
    },
    "host": "{{.Host}}",
    "basePath": "/",
    "paths": {
        "/odj-deliver/create-trigger": {
            "post": {
                "description": "create cloudbuild trigger and store triggerId in component table",
                "consumes": [
                    "application/json"
                ],
                "summary": "Create cloudbuild trigger in GCP",
                "operationId": "odj-cloudbuild",
                "parameters": [
                    {
                        "description": "Information of Component to Create Cloud Build Trigger",
                        "name": "newComponent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.ComponentResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.APIMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.APIMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.APIMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.APIMessage"
                        }
                    }
                }
            }
        },
        "/odj-deliver/webhook/bitbucket": {
            "post": {
                "description": "capture a webook payload of Bitbucket and store build details into build table",
                "consumes": [
                    "application/json"
                ],
                "summary": "capture webook payload and store the build details into build table",
                "operationId": "odj-webhook-bitbucket",
                "parameters": [
                    {
                        "description": "Information of Commit and Build to insert",
                        "name": "bitbucketResponse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.APIMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.APIMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.APIMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.APIMessage"
                        }
                    }
                }
            }
        },
        "/odj-deliver/webhook/github": {
            "post": {
                "description": "capture a webook payload of Github and store build details into build table",
                "consumes": [
                    "application/json"
                ],
                "summary": "capture webook payload and store the build details into build table",
                "operationId": "odj-webhook-github",
                "parameters": [
                    {
                        "description": "Information of Commit and Build to insert",
                        "name": "githubResponse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.GitResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.APIMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.APIMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.APIMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.APIMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.APIMessage": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "text": {
                    "type": "string",
                    "example": "hello world!"
                }
            }
        },
        "model.Change": {
            "type": "object",
            "properties": {
                "closed": {
                    "type": "boolean"
                },
                "commits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Commit"
                    }
                },
                "new": {
                    "type": "object",
                    "$ref": "#/definitions/model.CommitBranch"
                }
            }
        },
        "model.Commit": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.CommitBranch": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "model.ComponentResponse": {
            "type": "object",
            "properties": {
                "component_name": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                },
                "repository_name": {
                    "type": "string"
                },
                "repository_url": {
                    "type": "string"
                },
                "trigger_id": {
                    "type": "string"
                }
            }
        },
        "model.GitCommits": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.GitRepository": {
            "type": "object",
            "properties": {
                "master_branch": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.GitResponse": {
            "type": "object",
            "properties": {
                "commits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GitCommits"
                    }
                },
                "repository": {
                    "type": "object",
                    "$ref": "#/definitions/model.GitRepository"
                }
            }
        },
        "model.Html": {
            "type": "object",
            "properties": {
                "href": {
                    "type": "string"
                }
            }
        },
        "model.Link": {
            "type": "object",
            "properties": {
                "html": {
                    "type": "object",
                    "$ref": "#/definitions/model.Html"
                }
            }
        },
        "model.Push": {
            "type": "object",
            "properties": {
                "changes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Change"
                    }
                }
            }
        },
        "model.Repository": {
            "type": "object",
            "properties": {
                "full_name": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "$ref": "#/definitions/model.Link"
                }
            }
        },
        "model.Response": {
            "type": "object",
            "properties": {
                "push": {
                    "type": "object",
                    "$ref": "#/definitions/model.Push"
                },
                "repository": {
                    "type": "object",
                    "$ref": "#/definitions/model.Repository"
                }
            }
        }
    }
}